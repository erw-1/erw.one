const MIN_ZOOM_LEVEL_FOR_PANES=14;let previewMarker,prTooltips=[],highlightedPRs=[],currentPRs={roadName:"",closestAhead:null,closestBehind:null},eventsAdded=!1;const styles={mapTileLayer:"https://cartodb-basemaps-a.global.ssl.fastly.net/light_nolabels/{z}/{x}/{y}.png",mapTileLayerAttribution:"Erwan Vinot - HSN | OSM",mapOptions:{center:[47.6205,6.3498],zoom:10,zoomControl:!1},route:{color:"#4d4d4d",weight:2,opacity:1,pane:"routesPane",renderer:L.canvas()},point:{radius:3,fillColor:"#ff0000",color:"none",fillOpacity:1,pane:"pointsPreviewPane"},preview:{radius:3,fillColor:"#ffff00",color:"none",fillOpacity:1,pane:"pointsPreviewPane"},selected:{radius:3,fillColor:"#00ff00",color:"none",fillOpacity:1,pane:"pointsPreviewPane"},highlight:{radius:3,fillColor:"#ffa500",color:"none",fillOpacity:1,pane:"pointsPreviewPane"},tooltip:{permanent:!0,direction:"top",offset:[0,-10],className:"highlighted-tooltip",pane:"pointsPreviewPane"},prTooltip:{permanent:!0,direction:"top",offset:[0,-10],className:"pr-tooltip",pane:"pointsPreviewPane"},popup:{closeOnClick:!1,autoClose:!1}},htmlContent={tooltip:e=>`<b>${e}</b>`,prTooltipContent:(e,t)=>`<b>PR${e}</b><br>${t} m`,popupContent:(e,t,o,r,n)=>`<b>${e}</b><br>Point à ${t} m du PR ${o}.<br>Et à ${r} m du PR ${n}.`},map=L.map("map",styles.mapOptions);L.tileLayer(styles.mapTileLayer,{attribution:styles.mapTileLayerAttribution,maxNativeZoom:19,maxZoom:22}).addTo(map),["routesPane","pointsPreviewPane"].forEach(((e,t)=>{map.createPane(e).style.zIndex=400+t}));const addGeoJsonLayer=(e,t,o,r=!1,n)=>{fetch(e).then((e=>e.json())).then((e=>{r&&(e=simplifyGeometry(e,1/Math.pow(2,map.getZoom())));const a=L.geoJson(e,{style:t,pointToLayer:o}).addTo(map);n&&window[n]&&map.removeLayer(window[n]),window[n]=a}))},simplifyGeometry=(e,t)=>turf.simplify(e,{tolerance:t,highQuality:!1}),debounce=(e,t)=>{let o;return(...r)=>{o&&clearTimeout(o),o=setTimeout((()=>{e(...r)}),t)}},togglePaneVisibility=(e,t)=>{map.getPane(e).style.display=map.getZoom()>=t?"block":"none"},findClosestPointOnRoad=(e,t,o)=>{let r=null,n=1e3,a="",i=null;return t.eachLayer((t=>{const s=turf.lineString(t.getLatLngs().map((e=>[e.lng,e.lat]))),l=turf.nearestPointOnLine(s,e),p=turf.distance(e,l,{units:"meters"}).toFixed(1);p<n&&p<=o&&(n=p,r=L.latLng(l.geometry.coordinates[1],l.geometry.coordinates[0]),a=t.feature.properties.nom_route,i=s)})),{closestPoint:r,roadName:a,roadLine:i}},findClosestPRs=(e,t,o)=>{const r=[];window.pointsLayer.eachLayer((e=>{if(e.feature.properties.route_pr===o){const t=turf.point([e.getLatLng().lng,e.getLatLng().lat]);r.push({layer:e,point:t,properties:e.feature.properties})}}));const n=r.map((o=>({prLayer:o.layer,distance:turf.length(turf.lineSlice(e,o.point,t),{units:"meters"}).toFixed(1),properties:o.properties})));return n.sort(((e,t)=>e.distance-t.distance)),n.slice(0,2)},updatePreviewMarker=e=>{previewMarker&&map.removeLayer(previewMarker),prTooltips.forEach((e=>map.removeLayer(e))),prTooltips=[],highlightedPRs.forEach((e=>map.removeLayer(e))),highlightedPRs=[];const t=window.routesLayer;if(!t)return;const o=turf.point([e.latlng.lng,e.latlng.lat]),{closestPoint:r,roadName:n,roadLine:a}=findClosestPointOnRoad(o,t,200);if(r){previewMarker=L.circleMarker(r,styles.preview).addTo(map),map.getContainer().style.cursor="pointer";const e=findClosestPRs(turf.point([r.lng,r.lat]),a,n);previewMarker.bindTooltip(htmlContent.tooltip(n),styles.tooltip).openTooltip(),currentPRs={roadName:n,closestAhead:e[0]?{distance:e[0].distance,num_pr:e[0].properties.num_pr}:null,closestBehind:e[1]?{distance:e[1].distance,num_pr:e[1].properties.num_pr}:null},e.forEach((e=>{const t=L.circleMarker(e.prLayer.getLatLng(),styles.highlight).bindTooltip(htmlContent.prTooltipContent(e.properties.num_pr,e.distance),styles.prTooltip).addTo(map);prTooltips.push(t),highlightedPRs.push(t)}))}else map.getContainer().style.cursor=""},selectPreviewMarker=e=>{if(previewMarker){const e=previewMarker.getLatLng(),t=htmlContent.popupContent(currentPRs.roadName,currentPRs.closestAhead?currentPRs.closestAhead.distance:0,currentPRs.closestAhead?currentPRs.closestAhead.num_pr:"N/A",currentPRs.closestBehind?currentPRs.closestBehind.distance:0,currentPRs.closestBehind?currentPRs.closestBehind.num_pr:"N/A"),o=L.circleMarker(e,styles.selected).bindPopup(t,styles.popup).addTo(map).openPopup();o.on("popupclose",(()=>{map.removeLayer(o)}))}},initializeMap=()=>{addGeoJsonLayer("data/routes70.geojson",styles.route,null,!0,"routesLayer"),addGeoJsonLayer("data/pr70.geojson",null,((e,t)=>L.circleMarker(t,styles.point)),!1,"pointsLayer"),togglePaneVisibility("pointsPreviewPane",14)};addGeoJsonLayer("data/routes70.geojson",styles.route,null,!0,"routesLayer"),addGeoJsonLayer("data/pr70.geojson",null,((e,t)=>L.circleMarker(t,styles.point)),!1,"pointsLayer"),togglePaneVisibility("pointsPreviewPane",14),map.on("zoomend",(()=>{addGeoJsonLayer("data/routes70.geojson",styles.route,null,!0,"routesLayer"),togglePaneVisibility("pointsPreviewPane",14),map.getZoom()>=14&&!eventsAdded&&(map.on("mousemove",debounce(updatePreviewMarker,50)),map.on("click",selectPreviewMarker),eventsAdded=!0)}));
